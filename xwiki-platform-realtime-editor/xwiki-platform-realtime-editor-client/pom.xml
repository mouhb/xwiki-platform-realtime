<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.xwiki.platform</groupId>
    <artifactId>xwiki-platform-realtime-editor</artifactId>
    <version>4.3-SNAPSHOT</version>
  </parent>

  <artifactId>xwiki-platform-realtime-editor-client</artifactId>

  <name>XWiki Platform - Realtime - Editor - GWT Client</name>

  <dependencies>
    <dependency>
      <!-- This dependency is required only for its annotations. GWT-RPC 
        services are implemented as components in XWiki and for this reason service 
        interfaces have to be annotated as component roles. -->
      <groupId>org.xwiki.commons</groupId>
      <artifactId>xwiki-commons-component-api</artifactId>
      <version>${commons.version}</version>
    </dependency>

    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-gwt-user</artifactId>
      <version>${platform.version}</version>
    </dependency>

    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-gwt-dom</artifactId>
      <version>${platform.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit-dep</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <properties>
    <gwt.style>PRETTY</gwt.style>
    <gwt.output.directory>${project.build.directory}/${project.build.finalName}/resources/js/xwiki/rte</gwt.output.directory>
    <xre.directory>${gwt.output.directory}/xre</xre.directory>
    <xre.module>fr.loria.score.Rt</xre.module>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>

      <resource>
        <!-- We need to include the source files in the generated JAR because 
          they are needed by the GWT module that depends on this as the GWT compiler 
          needs the sources to generate the JS files. -->
        <directory>src/main/java</directory>
      </resource>
    </resources>

    <plugins>
        <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <configuration>
          <modules>
            <module>${xre.module}</module>
          </modules>
          <!--where GWT compiler will write output files -->
          <webappDirectory>${gwt.output.directory}</webappDirectory>
          <style>${gwt.style}</style>
          <disableCastChecking>true</disableCastChecking>
          <disableClassMetadata>true</disableClassMetadata>
          <soyc>false</soyc>
        </configuration>
        <executions>
          <execution>
            <goals>
                <goal>generateAsync</goal>
                <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--Copy *Async interfaces generated by GWT to the final jar-->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                  <resource>
                      <directory>${project.build.directory}/generated-sources/gwt</directory>
                       <includes>
                            <include>**/*.java </include>
                      </includes>
                  </resource>
                  <resource>
                      <directory>${gwt.output.directory}</directory>
                       <includes>
                            <include>**/*</include>
                      </includes>
                  </resource>
              </resources>
          </configuration>
          <executions>
              <execution>
                  <id>copy-resources</id>
                  <goals>
                      <goal>copy-resources</goal>
                  </goals>
                  <phase>prepare-package</phase>
              </execution>
          </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <!-- Build the jar that needs to be shared with the server side. -->
            <id>build-shared-jar</id>
            <configuration>
              <classifier>shared</classifier>
              <includes>
                <!-- We need to share only the classes that are used on the 
                  server (e.g. GWT-RPC service interfaces and GWT-RPC parameter types) -->
                <include>**/*.class</include>
              </includes>
            </configuration>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- Apply the Checkstyle configurations defined in the top level pom.xml file -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <excludes>
              <!-- TODO: fix -->
              **/*
          </excludes>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
